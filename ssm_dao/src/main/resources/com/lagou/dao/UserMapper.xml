<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.UserMapper">
    <select id="findAllUserByPage" parameterType="UserVo" resultType="User">
        select id,
               NAME,
               portrait,
               phone,
               PASSWORD,
               STATUS,
               create_time from user
        <where>
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null and username != ''">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time between #{startCreateTime} and #{endCreateTime}
            </if>
        </where>
    </select>

    <update id="updateUserStatus" parameterType="user">
        update user set status = #{status} where id = #{id}
    </update>

    <!--实现登录功能-->
    <select id="login" parameterType="User" resultType="User">
        select * from user where phone = #{phone};
    </select>

    <!--清除中间表的数据-->
    <delete id="deleteUserRoleRelation" parameterType="int">
        delete from user_role_relation where user_id = #{id}
    </delete>

    <!--向中间表user_role_relation插入数据-->
    <insert id="userContextRole" parameterType="User_Role_relation">
        insert into user_role_relation values(null, #{userId}, #{roleId}, #{createdTime}, #{updatedTime}, #{createdBy}, #{updatedby})
    </insert>

    <!--1. 根据id查找用户所对应的角色信息-->
    <select id="findUserRelationRoleById" parameterType="int" resultType="Role">
        SELECT
            r.id,
            r.code,
            r.name,
            r.description
        FROM roles r INNER JOIN user_role_relation ur ON r.`id` = ur.`role_id` INNER JOIN USER u ON ur.`user_id` = u.`id` WHERE u.`id` = #{id}
    </select>

    <!--2. 根据角色id查询角色所拥有的顶级菜单(-1)-->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="Menu">
        SELECT
            DISTINCT m.*
        FROM
            roles r INNER JOIN role_menu_relation rm
                               ON r.`id` = rm.`role_id`
                    INNER JOIN menu m ON rm.`menu_id` = m.`id`
        WHERE
            r.`id` IN
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
          AND m.`parent_id` = -1
    </select>

    <!--3. 根据pid查询子菜单信息-->
    <select id="findSubMenuByPid" parameterType="int" resultType="Menu">
        select * from menu where parent_id = #{pid}
    </select>

    <!--4. 获取用户所拥有的资源信息-->
    <select id="findResourceByRoleId" parameterType="java.util.List" resultType="Resource">
        SELECT
            DISTINCT rs.*
        FROM
            roles r INNER JOIN role_resource_relation rrr
                               ON r.`id` = rrr.`role_id`
                    INNER JOIN resource rs ON rrr.`resource_id` = rs.`id`
        WHERE
            r.`id` IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>